{"version":3,"sources":["main.scss","../../bower_components/normalize-scss/_normalize.scss","main.css","_settings.scss","../../bower_components/susy/sass/susy/output/support/_rem.scss","../../bower_components/susy/sass/susy/language/susy/_container.scss","../../bower_components/susy/sass/susy/output/support/_clearfix.scss","../../bower_components/susy/sass/susy/language/susy/_background.scss","../../bower_components/susy/sass/susy/output/support/_background.scss","../../bower_components/susy/sass/susy/language/susy/_span.scss","../../bower_components/susy/sass/susy/output/shared/_background.scss","../../bower_components/juice/dist/_juice.scss","../../bower_components/breakpoint-sass/stylesheets/_breakpoint.scss"],"names":[],"mappings":"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","file":"main.min.css","sourcesContent":["@import url('https://fonts.googleapis.com/css?family=Merriweather');\n\n@import \"../../bower_components/normalize-scss/_normalize.scss\";\n\n@import \"../../bower_components/juice/dist/juice\";\n\n@import \"settings\";\n\n@import \"function\";\n\n@import \"susy\";\n\n\n/* Extra small devices (phones, less than 768px) */\n\n\nbody {\n\tbox-sizing: border-box;\n\tline-height: $global-line-height;\n\tbackground-color: color(white);\n\tfont-smooth: $font-smooth;\n\tfont-size: $global-font-size;\n\tcolor: color(white);\n\ttext-align: center;\n}\n\na {\n\tcolor: color(white);\n\ttext-decoration: none;\n}\n\nul {\n\tpadding: 0;\n\tmargin: 0;\n\tlist-style: none;\n}\n\n#wrapper {\n\t@include container(auto);\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground-image: url(\"/img/assets/375x665.jpg\");\n\tbackground-size: cover;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tposition: relative;\n}\n\n#container {\n\t@include centerer;\n\tmin-width: 400px;\n}\n\n.logo {\n\tmargin: 0 auto;\n\t& img {\n\t\twidth: 60vw;\n\t\tmax-width: rem-calc(250px);\n\t}\n}\n\n.main-nav {\n\tfont-size: 1.5rem;\n\tmargin-top: 1.5rem;\n\t& a {\n\t\ttext-decoration: underline;\n\t}\n}\n\n.address {\n\tmargin-top: 2.5rem;\n}\n\n.social {\n\t& li {\n\t\tdisplay: inline-block;\n\t\tvertical-align: middle;\n\t\tpadding: 0 1rem; \n\t\t& .f-icon::before {\n\t\t\tcontent: '';\n\t\t\tdisplay: inline-block;\n\t\t\twidth: rem-calc(36px);\n\t\t\theight: rem-calc(36px);\n\t\t\tbackground-image: url(\"/img/assets/f-icon.svg\");\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position: center;\n\t\t}\n\t\t& .i-icon::before {\n\t\t\tcontent: '';\n\t\t\tdisplay: inline-block;\n\t\t\twidth: rem-calc(36px);\n\t\t\theight: rem-calc(36px);\n\t\t\tbackground-image: url(\"/img/assets/i-icon.svg\");\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position: center;\n\t\t}\n\t}\n}\n\n\n\n/* Small devices (tablets, 768px and up) */\n@include susy-breakpoint($b-medium) {\n\t#wrapper {\n\t\tbackground-image: url(\"/img/assets/768x1024.jpg\");\n\t}\n}\n\n/* Medium devices (desktops, 1024px and up) */\n@include susy-breakpoint($b-large) {\n\t#wrapper {\n\t\tbackground-image: url(\"/img/assets/1920x1080.jpg\");\n\t}\n}\n\n/* Large devices (large desktops, 1440px and up) */\n@include susy-breakpoint($b-xlarge) {\n\t.logo {\n\t\t& img {\n\t\t\tmax-width: rem-calc(290px);\n\t\t}\n\t}\n}\n\n\n\n\n\n","/* ==========================================================================\n   Normalize.scss settings\n   ========================================================================== */\n/**\n * Includes legacy browser support IE6/7\n *\n * Set to false if you want to drop support for IE6 and IE7\n */\n\n$legacy_browser_support: false !default;\n\n/* Base\n   ========================================================================== */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS and IE text size adjust after device orientation change,\n *    without disabling user zoom.\n * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using\n *  `em` units.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  @if $legacy_browser_support {\n    *font-size: 100%; /* 3 */\n  }\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n  @if $legacy_browser_support {\n    *display: inline;\n    *zoom: 1;\n  }\n}\n\n/**\n * Prevents modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability of focused elements when they are also in an\n * active/hover state.\n */\n\na {\n  &:active, &:hover {\n    outline: 0;\n  };\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\n\nb,\nstrong {\n  font-weight: bold;\n}\n\n@if $legacy_browser_support {\n  blockquote {\n    margin: 1em 40px;\n  }\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n@if $legacy_browser_support {\n  h2 {\n    font-size: 1.5em;\n    margin: 0.83em 0;\n  }\n\n  h3 {\n    font-size: 1.17em;\n    margin: 1em 0;\n  }\n\n  h4 {\n    font-size: 1em;\n    margin: 1.33em 0;\n  }\n\n  h5 {\n    font-size: 0.83em;\n    margin: 1.67em 0;\n  }\n\n  h6 {\n    font-size: 0.67em;\n    margin: 2.33em 0;\n  }\n}\n\n/**\n * Addresses styling not present in IE 8/9.\n */\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n@if $legacy_browser_support {\n\n  /**\n   * Addresses margins set differently in IE 6/7.\n   */\n\n  p,\n  pre {\n    *margin: 1em 0;\n  }\n\n  /*\n   * Addresses CSS quotes not supported in IE 6/7.\n   */\n\n  q {\n    *quotes: none;\n  }\n\n  /*\n   * Addresses `quotes` property not supported in Safari 4.\n   */\n\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n@if $legacy_browser_support {\n\n  /* ==========================================================================\n     Lists\n     ========================================================================== */\n\n  /*\n   * Addresses margins set differently in IE 6/7.\n   */\n\n  dl,\n  menu,\n  ol,\n  ul {\n    *margin: 1em 0;\n  }\n\n  dd {\n    *margin: 0 0 0 40px;\n  }\n\n  /*\n   * Addresses paddings set differently in IE 6/7.\n   */\n\n  menu,\n  ol,\n  ul {\n    *padding: 0 0 0 40px;\n  }\n\n  /*\n   * Corrects list images handled incorrectly in IE 7.\n   */\n\n  nav ul,\n  nav ol {\n    *list-style: none;\n    *list-style-image: none;\n  }\n\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * 1. Remove border when inside `a` element in IE 8/9/10.\n * 2. Improves image quality when scaled in IE 7.\n */\n\nimg {\n  border: 0;\n  @if $legacy_browser_support {\n    *-ms-interpolation-mode: bicubic; /* 2 */\n  }\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\n\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  @if $legacy_browser_support {\n    _font-family: 'courier new', monospace;\n  }\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n\n/**\n * 1. Correct color not being inherited.\n *  Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n * 4. Improves appearance and consistency in all browsers.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; /* 1 */\n  font: inherit; /* 2 */\n  margin: 0; /* 3 */\n  @if $legacy_browser_support {\n    vertical-align: baseline; /* 3 */\n    *vertical-align: middle; /* 3 */\n  }\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *  and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *  `input` and others.\n * 4. Removes inner spacing in IE 7 without affecting normal text inputs.\n *  Known issue: inner spacing remains in IE 6.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n  @if $legacy_browser_support {\n    *overflow: visible;  /* 4 */\n  }\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\ninput {\n  line-height: normal;\n}\n\n/**\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n *  Known issue: excess padding remains in IE 6.\n */\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n  @if $legacy_browser_support {\n    *height: 13px; /* 3 */\n    *width: 13px; /* 3 */\n  }\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n */\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  box-sizing: content-box; /* 2 */\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n * 3. Corrects text not wrapping in Firefox 3.\n * 4. Corrects alignment displayed oddly in IE 6/7.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0; /* 2 */\n  @if $legacy_browser_support {\n    white-space: normal; /* 3 */\n    *margin-left: -7px; /* 4 */\n  }\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}","@import url(\"https://fonts.googleapis.com/css?family=Merriweather\");\n/* ==========================================================================\n   Normalize.scss settings\n   ========================================================================== */\n/**\n * Includes legacy browser support IE6/7\n *\n * Set to false if you want to drop support for IE6 and IE7\n */\n/* Base\n   ========================================================================== */\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS and IE text size adjust after device orientation change,\n *    without disabling user zoom.\n * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using\n *  `em` units.\n */\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  -ms-text-size-adjust: 100%;\n  /* 2 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */ }\n\n/**\n * Remove default margin.\n */\nbody {\n  margin: 0; }\n\n/* HTML5 display definitions\n   ========================================================================== */\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block; }\n\n/**\n * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  /* 1 */\n  vertical-align: baseline;\n  /* 2 */ }\n\n/**\n * Prevents modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n */\n[hidden],\ntemplate {\n  display: none; }\n\n/* Links\n   ========================================================================== */\n/**\n * Remove the gray background color from active links in IE 10.\n */\na {\n  background-color: transparent; }\n\n/**\n * Improve readability of focused elements when they are also in an\n * active/hover state.\n */\na:active, a:hover {\n  outline: 0; }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\nabbr[title] {\n  border-bottom: 1px dotted; }\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\nb,\nstrong {\n  font-weight: bold; }\n\n/**\n * Address styling not present in Safari and Chrome.\n */\ndfn {\n  font-style: italic; }\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/**\n * Addresses styling not present in IE 8/9.\n */\nmark {\n  background: #ff0;\n  color: #000; }\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsup {\n  top: -0.5em; }\n\nsub {\n  bottom: -0.25em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n * 1. Remove border when inside `a` element in IE 8/9/10.\n * 2. Improves image quality when scaled in IE 7.\n */\nimg {\n  border: 0; }\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\nfigure {\n  margin: 1em 40px; }\n\n/**\n * Address differences between Firefox and other browsers.\n */\nhr {\n  box-sizing: content-box;\n  height: 0; }\n\n/**\n * Contain overflow in all browsers.\n */\npre {\n  overflow: auto; }\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.\n */\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\n/* Forms\n   ========================================================================== */\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n/**\n * 1. Correct color not being inherited.\n *  Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n * 4. Improves appearance and consistency in all browsers.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n  margin: 0;\n  /* 3 */ }\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\nbutton {\n  overflow: visible; }\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\nbutton,\nselect {\n  text-transform: none; }\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *  and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *  `input` and others.\n * 4. Removes inner spacing in IE 7 without affecting normal text inputs.\n *  Known issue: inner spacing remains in IE 6.\n */\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  /* 2 */\n  cursor: pointer;\n  /* 3 */ }\n\n/**\n * Re-set default cursor for disabled elements.\n */\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default; }\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0; }\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\ninput {\n  line-height: normal; }\n\n/**\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n *  Known issue: excess padding remains in IE 6.\n */\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n */\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  box-sizing: content-box;\n  /* 2 */ }\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * Define consistent border, margin, and padding.\n */\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n * 3. Corrects text not wrapping in Firefox 3.\n * 4. Corrects alignment displayed oddly in IE 6/7.\n */\nlegend {\n  border: 0;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\ntextarea {\n  overflow: auto; }\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\noptgroup {\n  font-weight: bold; }\n\n/* Tables\n   ========================================================================== */\n/**\n * Remove most spacing between table cells.\n */\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd,\nth {\n  padding: 0; }\n\n/* Extra small devices (phones, less than 768px) */\nbody {\n  box-sizing: border-box;\n  line-height: 1.7;\n  background-color: #fff;\n  font-smooth: antialiased;\n  font-size: 16px;\n  color: #fff;\n  text-align: center; }\n\na {\n  color: #fff;\n  text-decoration: none; }\n\nul {\n  padding: 0;\n  margin: 0;\n  list-style: none; }\n\n#wrapper {\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100vw;\n  height: 100vh;\n  background-image: url(\"/img/assets/375x665.jpg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  position: relative; }\n  #wrapper:after {\n    content: \" \";\n    display: block;\n    clear: both; }\n  head {\n    display: block;\n    position: fixed;\n    right: 10px;\n    bottom: 10px;\n    z-index: 999;\n    color: #333;\n    background: rgba(255, 255, 255, 0.25); }\n  head:before {\n    content: \"|||\";\n    display: block;\n    padding: 5px 10px;\n    font-family: sans-serif;\n    font-size: 16px;\n    font-weight: bold; }\n  head:hover {\n    background: rgba(255, 255, 255, 0.5);\n    color: red; }\n  head:hover ~ #wrapper,\n  head:hover ~ body #wrapper {\n    position: relative; }\n    head:hover ~ #wrapper:before,\n    head:hover ~ body #wrapper:before {\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      content: \" \";\n      z-index: 998;\n      background-image: linear-gradient(to right, rgba(102, 102, 255, 0.15), rgba(179, 179, 255, 0.15) 80%, transparent 80%);\n      background-size: 8.47458%;\n      background-origin: content-box;\n      background-clip: content-box;\n      background-position: left top; }\n\n#container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-width: 400px; }\n\n.logo {\n  margin: 0 auto; }\n  .logo img {\n    width: 60vw;\n    max-width: 15.625rem; }\n\n.main-nav {\n  font-size: 1.5rem;\n  margin-top: 1.5rem; }\n  .main-nav a {\n    text-decoration: underline; }\n\n.address {\n  margin-top: 2.5rem; }\n\n.social li {\n  display: inline-block;\n  vertical-align: middle;\n  padding: 0 1rem; }\n  .social li .f-icon::before {\n    content: '';\n    display: inline-block;\n    width: 2.25rem;\n    height: 2.25rem;\n    background-image: url(\"/img/assets/f-icon.svg\");\n    background-repeat: no-repeat;\n    background-position: center; }\n  .social li .i-icon::before {\n    content: '';\n    display: inline-block;\n    width: 2.25rem;\n    height: 2.25rem;\n    background-image: url(\"/img/assets/i-icon.svg\");\n    background-repeat: no-repeat;\n    background-position: center; }\n\n/* Small devices (tablets, 768px and up) */\n@media (min-width: 48em) {\n  #wrapper {\n    background-image: url(\"/img/assets/768x1024.jpg\"); } }\n\n/* Medium devices (desktops, 1024px and up) */\n@media (min-width: 64em) {\n  #wrapper {\n    background-image: url(\"/img/assets/1920x1080.jpg\"); } }\n\n/* Large devices (large desktops, 1440px and up) */\n@media (min-width: 90em) {\n  .logo img {\n    max-width: 18.125rem; } }","//variables maps\n$colors: (\n\twhite: #fff,\n\tblack: #333333\n);\n\n$global-font-family: 'Roboto', serif;\n$global-font-size: 16px;\n$global-line-height: 1.7;\n$font-smooth: antialiased;\n\n// Media q breakpoints\n\n$b-small: 0;\n$b-medium: 48em;\n$b-large: 64em;\n$b-xlarge: 90em;\n$b-xxlarge: 100em;\n\n$b-small-only: 0 47.9375em;\n$b-medium-only: 48em 74, 9375em;\n$b-large-only: 75em 99, 9375em;\n\n//Typography\n\n$paragraph-lineheight: 1.7;\n$paragraph-margin-bottom: 1.5em;\n\n$header-font-family: 'Roboto', sans-serif;\n$header-font-weight: 400;\n$header-color: color(white);\n$header-lineheight: 1.4;\n\n$header-sizes: (\n        small: (\n                'h1': 24,\n                'h2': 20,\n                'h3': 19,\n                'h4': 18,\n                'h5': 17,\n                'h6': 16,\n        ),\n        medium: (\n                'h1': 48,\n                'h2': 40,\n                'h3': 31,\n                'h4': 25,\n                'h5': 20,\n                'h6': 16,\n        ),\n)","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Background Grid Syntax\n// ======================\n\n$susy-overlay-grid-head-exists: false;\n\n\n// Show Grid/s\n// -----------\n// Show grid on any element using either background or overlay.\n// - [$grid]  : <settings>\n@mixin show-grid(\n  $grid: $susy\n) {\n  $inspect: $grid;\n  $_output: debug-get(output, $grid);\n\n  @include susy-inspect(show-grid, $inspect);\n  @if $_output == overlay and susy-get(debug image, $grid) != hide {\n    @include overlay-grid($grid);\n  } @else {\n    @include background-grid($grid);\n  }\n}\n\n@mixin show-grids(\n  $grid: $susy\n) {\n  @include show-grid($grid);\n}\n\n// Background Grid\n// ---------------\n// Show a grid background on any element.\n// - [$grid]  : <settings>\n@mixin background-grid(\n  $grid: $susy\n) {\n  $inspect  : $grid;\n  $_output  : get-background($grid);\n\n  @if length($_output) > 0 {\n    $_flow: susy-get(flow, $grid);\n\n    $_image: ();\n    @each $name, $layer in map-get($_output, image) {\n      $_direction: if($name == baseline, to bottom, to to($_flow));\n      $_image: append($_image, linear-gradient($_direction, $layer), comma);\n    }\n    $_output: map-merge($_output, (image: $_image));\n\n    @include background-grid-output($_output...);\n    @include susy-inspect(background-grid, $inspect);\n  }\n}\n\n\n// Overlay Grid\n// ------------\n// Generate an icon to trigger grid-overlays on any given elements.\n// $grids...  : <selector> [<settings>] [, <selector>]*\n@mixin overlay-grid (\n  $grid: $susy\n) {\n  @if not($susy-overlay-grid-head-exists) {\n    @at-root head { @include overlay-head($grid); }\n    @at-root head:before { @include overlay-trigger; }\n    @at-root head:hover { @include overlay-trigger-hover; }\n    $susy-overlay-grid-head-exists: true !global;\n  }\n\n  head:hover ~ &,\n  head:hover ~ body & {\n    position: relative;\n    &:before {\n      @include grid-overlay-base;\n      @include background-grid($grid);\n    }\n  }\n}\n\n\n// [Private] Overlay Trigger\n// -------------------------\n@mixin overlay-trigger {\n  content: \"|||\";\n  display: block;\n  padding: 5px 10px;\n  font: {\n    family: sans-serif;\n    size: 16px;\n    weight: bold;\n  }\n}\n\n\n// [Private] Overlay Trigger Hover\n// -------------------------------\n@mixin overlay-trigger-hover {\n  background: rgba(white, .5);\n  color: red;\n}\n\n\n// [Private] Overlay Head\n// ----------------------\n// <head> styles to create grid overlay toggle\n@mixin overlay-head (\n  $grid: $susy\n) {\n  $_toggle: debug-get(toggle, $grid);\n  $_horz: null;\n  $_vert: null;\n\n  @each $side in $_toggle {\n    $_horz: if($side == left or $side == right, $side, $_horz);\n    $_vert: if($side == top or $side == bottom, $side, $_vert);\n  }\n\n  display: block;\n  position: fixed;\n  #{$_horz}: 10px;\n  #{$_vert}: 10px;\n  z-index: 999;\n  color: #333;\n  background: rgba(white, .25);\n}\n\n\n// [Private] Grid Overlay Base\n// ---------------------------\n// Base styles for generating a grid overlay\n@mixin grid-overlay-base() {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  content: \" \";\n  z-index: 998;\n}\n\n\n// Get Symmetrical Background\n// --------------------------\n// - $grid: <map>\n@function get-background-sym(\n  $grid\n) {\n  $grid           : parse-grid($grid);\n  $_gutters       : susy-get(gutters, $grid);\n  $_column-width  : susy-get(column-width, $grid);\n  $_math          : susy-get(math, $grid);\n\n  $_color         : debug-get(color);\n  $_trans         : transparent;\n  $_light         : lighten($_color, 15%);\n\n  $_end           : 1 + $_gutters;\n  $_after         : percentage(1/$_end);\n  $_stops         : ();\n  $_size          : span(1 $grid wide);\n\n  @if is-inside($grid) {\n    $_stops: $_color, $_light;\n  } @else if is-split($grid) {\n    $_split: $_gutters/2;\n    $_before: percentage($_split/$_end);\n    $_after: percentage((1 + $_split)/$_end);\n    $_stops: $_trans $_before, $_color $_before, $_light $_after, $_trans $_after;\n  } @else {\n    $_stops: $_color, $_light $_after, $_trans $_after;\n  }\n\n  @if $_math == static {\n    $_size: valid-column-math($_math, $_column-width) * $_end;\n  }\n\n  $_output: (\n    image: (columns: $_stops),\n    size: $_size,\n  );\n\n  @return $_output;\n}\n\n\n// Get Asymmetrical Inside\n// -----------------------\n// - $grid: <settings>\n@function get-asym-inside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n      $this-stop: append($this-stop, $_light $_end, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Split\n// ----------------------\n// - $grid: <settings>\n@function get-asym-split(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    $start: parse-span(1 at $location $grid);\n    $start: get-isolation($start);\n    $this-stop: append($this-stop, transparent $start, comma);\n    $this-stop: append($this-stop, $_color $start, comma);\n\n    $_end: $start + span(1 at $location $grid);\n    $this-stop: append($this-stop, $_light $_end, comma);\n    $this-stop: append($this-stop, transparent $_end, comma);\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Outside\n// ------------------------\n// - $grid: <settings>\n@function get-asym-outside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_trans   : transparent;\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $gutter: get-span-width(first $location $grid);\n\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n\n      $gutter: $_light $gutter, $_trans $gutter, $_trans $_end;\n      $this-stop: join($this-stop, $gutter, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Background\n// ---------------------------\n// - $grid: <settings>\n@function get-background-asym(\n  $grid\n) {\n  $_stops: ();\n\n  @if is-inside($grid) {\n    $_stops: get-asym-inside($grid);\n  } @else if is-split($grid) {\n    $_stops: get-asym-split($grid);\n  } @else {\n    $_stops: get-asym-outside($grid);\n  }\n\n  @return (image: (columns: $_stops));\n}\n\n\n// Get Background\n// --------------\n// - $grid: <settings>\n@function get-background(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_show    : susy-get(debug image, $grid);\n  $_return  : ();\n\n  @if $_show and $_show != 'hide' {\n    $_columns: susy-get(columns, $grid);\n\n    @if $_show != 'show-baseline' {\n      $_sym: is-symmetrical($_columns);\n      $_return: if($_sym, get-background-sym($grid), get-background-asym($grid));\n      $_return: map-merge($_return, (clip: content-box));\n    }\n\n    @if $_show != 'show-columns'\n      and global-variable-exists(base-line-height)\n      and type-of($base-line-height) == 'number'\n      and not unitless($base-line-height) {\n      $_color: variable-exists('grid-background-baseline-color');\n      $_color: if($_color, $grid-background-baseline-color, #000);\n\n      $_image: map-get($_return, image);\n      $_size: map-get($_return, size);\n      $_baseline: (baseline: ($_color 1px, transparent 1px));\n      $_baseline-size: 100% $base-line-height;\n\n      $_return: map-merge($_return, (\n        image: if($_image, map-merge($_image, $_baseline), $_baseline),\n        size: if($_size, ($_size, $_baseline-size), $_baseline-size),\n      ));\n\n      @if $_show == 'show' {\n        $_clip: map-get($_return, clip);\n        $_return: map-merge($_return, (clip: join($_clip, border-box, comma)));\n      }\n    } @else if $_show == 'show-baseline' {\n      @warn 'Please provide a $base-line-height with the desired height and units';\n    }\n  }\n\n  @if map-get($_return, image) {\n    $_return: map-merge($_return, (flow: susy-get(flow, $grid)));\n  }\n\n  @return $_return;\n}\n\n\n// Get Debug\n// ---------\n// Return the value of a debug setting\n// - $key: <setting>\n@function debug-get(\n  $key,\n  $grid: $susy\n) {\n  $key: join(debug, $key, space);\n  @return susy-get($key, $grid);\n}\n","// Background Properties\n// =====================\n\n// Susy Background Image\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-image>\n@mixin susy-background-image(\n  $image\n) {\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\n    @include background-image($image...);\n  } @else {\n    background-image: $image;\n  }\n}\n\n// Susy Background Size\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-size>\n@mixin susy-background-size(\n  $size\n) {\n  @if susy-support(background-options, (mixin: background-size)) {\n    @include background-size($size);\n  } @else {\n    background-size: $size;\n  }\n}\n\n// Susy Background Origin\n// ----------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-origin>\n@mixin susy-background-origin(\n  $origin\n) {\n  @if susy-support(background-options, (mixin: background-origin)) {\n    @include background-origin($origin);\n  } @else {\n    background-origin: $origin;\n  }\n}\n\n// Susy Background Clip\n// --------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-clip>\n@mixin susy-background-clip(\n  $clip\n) {\n  @if susy-support(background-options, (mixin: background-clip)) {\n    @include background-clip($clip);\n  } @else {\n    background-clip: $clip;\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Grid Background API\n// ===================\n// - Sub-pixel rounding can lead to several pixels variation between browsers.\n\n// Grid Background Output\n// ----------------------\n// - $image: background-image\n// - $size: background-size\n// - $clip: background-clip\n// - [$flow]: ltr | rtl\n@mixin background-grid-output (\n  $image,\n  $size: null,\n  $clip: null,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    background-image: $image,\n    background-size: $size,\n    background-origin: $clip,\n    background-clip: $clip,\n    background-position: from($flow) top,\n  );\n\n  @include output($output);\n}\n","// --------------------------------------------------------------------\n// Juice v1.0.0\n// --------------------------------------------------------------------\n@charset \"UTF-8\";\n\n\n\n// --------------------------------------------------------------------\n// Variable settings\n// --------------------------------------------------------------------\n\n// CSS cubic-bezier timing functions.\n// Credit: http://github.com/jaukia/easie\n// EASE IN\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n// EASE OUT\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n// EASE IN OUT\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n\n// Base px\n$base-px-default: 16px !default;\n$browser-prefixes: false !default;\n\n// Prefix mixin if needed\n// Credit: http://bourbon.io/docs/#prefixer\n@mixin juice-prefixer($property, $value, $prefixes) {\n\t@each $prefix in $prefixes {\n\t\t@if $prefix == webkit {\n\t\t\t-webkit-#{$property}: #{$value};\n\t\t}\n\t\t@else if $prefix == moz {\n\t\t\t-moz-#{$property}: #{$value};\n\t\t}\n\t\t@else if $prefix == ms {\n\t\t\t-ms-#{$property}: #{$value};\n\t\t}\n\t\t@else if $prefix == o {\n\t\t\t-o-#{$property}: #{$value};\n\t\t}\n\t\t@else if $prefix == spec {\n\t\t\t#{$property}: #{$value};\n\t\t}\n\t\t@else  {\n\t\t\t@warn \"Unrecognized prefix: #{$prefix}\";\n\t\t}\n\t}\n}\n\n// Strip the units from a value\n// ----------------------------\n@function strip-units($value) {\n\t@return $value / ($value * 0 + 1);\n}\n\n// Calculate rems from a px value\n// ------------------------------\n@function rem-calc($px, $base-val: $base-px-default) {\n\t@if not unitless($px) {\n\t\t$px: strip-units($px);\n\t}\n\t@if not unitless($base-val) {\n\t\t$base-val: strip-units($base-val);\n\t}\n\t@return ($px / $base-val) * 1rem;\n}\n\n// Calculate ems from a px value\n// ------------------------------\n@function em-calc($px, $base-val: $base-px-default) {\n\t@if not unitless($px) {\n\t\t$px: strip-units($px);\n\t}\n\t@if not unitless($base-val) {\n\t\t$base-val: strip-units($base-val);\n\t}\n\t@return ($px / $base-val) * 1em;\n}\n\n// Breakpoints\n$onepx: em-calc(1) !default;\n$hdpi-ratio-default: 1.3 !default;\n$breakpoint-xlarge-default: em-calc(1920) !default;\n$breakpoint-large-default: em-calc(1440) !default;\n$breakpoint-medium-default: em-calc(1024) !default;\n$breakpoint-small-default: em-calc(640) !default;\n$breakpoint-xsmall-default: em-calc(480) !default;\n$breakpoint-xxsmall-default: em-calc(320) !default;\n// Show/Hide\n$show-display-default: block !default;\n// Border Radius\n$border-radius-default: 5px !default;\n// Placeholder Color\n$placeholder-color-default: #555555 !default;\n// Triangle\n$triangle-direction-default: right !default;\n$triangle-size-default: $base-px-default !default;\n$triangle-color-default: #222222 !default;\n$triangle-element-default: after !default;\n// Circle\n$circle-size-default: $base-px-default !default;\n$circle-color-default: inherit !default;\n$circle-border-width-default: null !default;\n$circle-border-color-default: #222222 !default;\n$circle-display-default: inline-block !default;\n// Square\n$square-size-default: $base-px-default !default;\n$square-color-default: black !default;\n$square-border-width-default: null !default;\n$square-border-color-default: grey !default;\n$square-element-default: before !default;\n// Position\n$position-default: null !default;\n// Tint/Shade\n$mix-percent-default: 15% !default;\n\n\n\n\n// --------------------------------------------------------------------\n// Mixins\n// --------------------------------------------------------------------\n\n// Breakpoints\n// Inspiration: http://www.sitepoint.com/managing-responsive-breakpoints-sass/\n// ---------------------------------------------------------------------------\n$breakpoints: (\n\t\"xxlarge\":\t\"(min-width: #{$breakpoint-xlarge-default + $onepx})\",\n\t\"xlarge-only\":\t\"(min-width: #{$breakpoint-large-default + $onepx}) and (max-width: #{$breakpoint-xlarge-default})\",\n\t\"xlarge-up\":\t\"(min-width: #{$breakpoint-large-default + $onepx})\",\n\t\"xlarge\":\t\"(max-width: #{$breakpoint-xlarge-default})\",\n\t\"large-only\":\t\"(min-width: #{$breakpoint-medium-default + $onepx}) and (max-width: #{$breakpoint-large-default})\",\n\t\"large-up\":\t\"(min-width: #{$breakpoint-medium-default + $onepx})\",\n\t\"large\":\t\"(max-width: #{$breakpoint-large-default})\",\n\t\"medium-only\":\t\"(min-width: #{$breakpoint-small-default + $onepx}) and (max-width: #{$breakpoint-medium-default})\",\n\t\"medium-up\":\t\"(min-width: #{$breakpoint-small-default + $onepx})\",\n\t\"medium\":\t\"(max-width: #{$breakpoint-medium-default})\",\n\t\"small-only\":\t\"(min-width: #{$breakpoint-xsmall-default + $onepx}) and (max-width: #{$breakpoint-small-default})\",\n\t\"small-up\":\t\"(min-width: #{$breakpoint-xsmall-default + $onepx})\",\n\t\"small\":\t\"(max-width: #{$breakpoint-small-default})\",\n\t\"xsmall-only\":\t\"(min-width: #{$breakpoint-xxsmall-default + $onepx}) and (max-width: #{$breakpoint-xsmall-default})\",\n\t\"xsmall-up\":\t\"(min-width: #{$breakpoint-xxsmall-default + $onepx})\",\n\t\"xsmall\":\t\"(max-width: #{$breakpoint-xsmall-default})\",\n\t\"xxsmall\":\t\"(max-width: #{$breakpoint-xxsmall-default})\",\n\t\"iphone3\":\t\"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1)\",\n\t\"iphone3-landscape\":\t\"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1) and (orientation: landscape)\",\n\t\"iphone3-portrait\":\t\"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1) and (orientation: portrait)\",\n\t\"iphone4\":\t\"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3)\",\n\t\"iphone4-landscape\":\t\"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3) and (orientation: landscape)\",\n\t\"iphone4-portrait\":\t\"(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3) and (orientation: portrait)\",\n\t\"iphone5\":\t\"(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71)\",\n\t\"iphone5-landscape\":\t\"(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71) and (orientation: landscape)\",\n\t\"iphone5-portrait\":\t\"(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71) and (orientation: portrait)\",\n\t\"iphone6\":\t\"(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2)\",\n\t\"iphone6-landscape\":\t\"(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)\",\n\t\"iphone6-portrait\":\t\"(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)\",\n\t\"iphone6-plus\":\t\"(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3)\",\n\t\"iphone6-plus-landscape\":\t\"(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)\",\n\t\"iphone6-plus-portrait\":\t\"(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)\",\n\t\"ipad\":\t\"(min-device-width: 768px) and (max-device-width: 1024px)\",\n\t\"ipad-landscape\":\t\"(min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape)\",\n\t\"ipad-portrait\":\t\"(min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait)\",\n\t\"ipad-retina\":\t\"(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2)\",\n\t\"ipad-retina-landscape\":\t\"(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)\",\n\t\"ipad-retina-portrait\":\t\"(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)\",\n\t\"hdpi\":\t\"(-webkit-min-device-pixel-ratio: $hdpi-ratio-default), only screen and (min--moz-device-pixel-ratio: $hdpi-ratio-default), only screen and (-moz-min-device-pixel-ratio: $hdpi-ratio-default),\tonly screen and (-o-min-device-pixel-ratio: #{$hdpi-ratio-default}/1), only screen and (min-resolution: #{round($hdpi-ratio-default*96)}dpi), only screen and (min-resolution: #{$hdpi-ratio-default}dppx)\"\n);\n@mixin bp($break, $viewport1: null) {\n\t// preset breakpoint\n\t@if not $viewport1 {\n\t\t@if map-has-key($breakpoints, $break) {\n\t\t\t@media only screen and #{map-get($breakpoints, $break)} { @content; }\n\t\t}\n\t\t@else {\n\t\t\t@warn \"Couldn't find a breakpoint named #{$break}.\";\n\t\t}\n\t}\n\t@else {\n\t\t// min breakpoint\n\t\t@if $break == min {\n\t\t\t@media screen and (min-width: $viewport1) { @content; }\n\t\t}\n\t\t// max breakpoint\n\t\t@else if $break == max {\n\t\t\t@media screen and (max-width: $viewport1) { @content; }\n\t\t}\n\t\t// min & max breakpoint\n\t\t@else {\n\t\t\t@media screen and (min-width: $break) and (max-width: $viewport1) { @content; }\n\t\t}\n\t}\n}\n\n// Show/Hide Element\n// -----------------\n@mixin show($breakpoint: null, $display: $show-display-default) {\n\t@if $breakpoint {\n\t\tdisplay: none;\n\t\t@include bp($breakpoint) {\n\t\t\tdisplay: $display;\n\t\t}\n\t} @else {\n\t\tdisplay: $display;\n\t}\n}\n@mixin hide($breakpoint: null) {\n\t@if $breakpoint {\n\t\t@include bp($breakpoint) {\n\t\t\tdisplay: none !important;\n\t\t}\n\t} @else {\n\t\tdisplay: none !important;\n\t}\n}\n\n\n// Single side border radius\n// -------------------------\n@mixin border-top-radius($radius: $border-radius-default) {\n\tborder-top-right-radius: $radius;\n\tborder-top-left-radius: $radius;\n}\n@mixin border-right-radius($radius: $border-radius-default) {\n\tborder-top-right-radius: $radius;\n\tborder-bottom-right-radius: $radius;\n}\n@mixin border-bottom-radius($radius: $border-radius-default) {\n\tborder-bottom-right-radius: $radius;\n\tborder-bottom-left-radius: $radius;\n}\n@mixin border-left-radius($radius: $border-radius-default) {\n\tborder-top-left-radius: $radius;\n\tborder-bottom-left-radius: $radius;\n}\n\n// Transforms\n// ----------\n@mixin transform-single($property, $value) {\n\t@if $browser-prefixes {\n\t\t@include juice-prefixer(transform, #{$property}unquote(\"(\")#{$value}unquote(\")\"), webkit moz ms o spec);\n\t}\n\t@else {\n\t\ttransform: #{$property}unquote(\"(\")#{$value}unquote(\")\");\n\t}\n}\n@mixin rotate($deg) {\n\t@include transform-single(rotate, $deg);\n}\n@mixin rotateX($deg) {\n\t@include transform-single(rotateX, $deg);\n}\n@mixin rotateY($deg) {\n\t@include transform-single(rotateY, $deg);\n}\n@mixin rotateZ($deg) {\n\t@include transform-single(rotateZ, $deg);\n}\n@mixin rotate3d($x, $y, $z, $deg) {\n\t$multi-var: $x, $y, $z, $deg;\n\t@include transform-single(rotate3d, $multi-var);\n}\n@mixin scale($ratio) {\n\t@include transform-single(scale, $ratio);\n}\n@mixin scaleX($ratio) {\n\t@include transform-single(scaleX, $ratio);\n}\n@mixin scaleY($ratio) {\n\t@include transform-single(scaleY, $ratio);\n}\n@mixin scaleZ($ratio) {\n\t@include transform-single(scaleZ, $ratio);\n}\n@mixin scale3d($x, $y, $z) {\n\t$multi-var: $x, $y, $z;\n\t@include transform-single(scale3d, $multi-var);\n}\n@mixin skew($x, $y) {\n\t$multi-var: $x, $y;\n\t@include transform-single(skew, $multi-var);\n\tbackface-visibility: hidden;\n}\n@mixin skewX($deg) {\n\t@include transform-single(skewX, $deg);\n\tbackface-visibility: hidden;\n}\n@mixin skewY($deg) {\n\t@include transform-single(skewY, $deg);\n\tbackface-visibility: hidden;\n}\n@mixin translate($x, $y) {\n\t$multi-var: $x, $y;\n\t@include transform-single(translate, $multi-var);\n}\n@mixin translateX($x) {\n\t@include transform-single(translateX, $x);\n}\n@mixin translateY($y) {\n\t@include transform-single(translateY, $y);\n}\n@mixin translateZ($z) {\n\t@include transform-single(translateZ, $z);\n}\n@mixin translate3d($x, $y, $z) {\n\t$multi-var: $x, $y, $z;\n\t@include transform-single(translate3d, $multi-var);\n}\n\n// Emboss effect\n// -------------\n@mixin box-emboss($opacity: 0.5, $opacity2: 0.5){\n\t@if $browser-prefixes {\n\t\t@include juice-prefixer(box-shadow, \"rgba(white,#{$opacity}) 0 1px 0, inset rgba(black,#{$opacity2}) 0 1px 0\", webkit spec);\n\t}\n\t@else {\n\t\tbox-shadow: rgba(white,$opacity) 0 1px 0, inset rgba(black,$opacity2) 0 1px 0;\n\t}\n}\n\n// Letterpress effect\n// ------------------\n@mixin letterpress($opacity: 0.5){\n\ttext-shadow: rgba(white,$opacity) 0 1px 0;\n}\n\n// Placeholder text\n// ----------------\n@mixin placeholder-color($color: $placeholder-color-default) {\n\t@if $browser-prefixes {\n\t\t&::-webkit-input-placeholder {\n\t\t\tcolor: $color;\n\t\t}\n\t\t&::-moz-placeholder {\n\t\t\tcolor: $color;\n\t\t}\n\t\t&::-ms-input-placeholder {\n\t\t\tcolor: $color;\n\t\t}\n\t\t&::placeholder {\n\t\t\tcolor: $color;\n\t\t}\n\t}\n\t@else {\n\t\t&::placeholder {\n\t\t\tcolor: $color;\n\t\t}\n\t}\n}\n\n// Sizing\n// ------\n@mixin size($width, $height: $width) {\n\twidth: $width;\n\theight: $height;\n}\n\n// Normal & hover state\n// --------------------\n@mixin hoverer($property, $normal, $hovered) {\n\t#{$property}: $normal;\n\t&:hover {\n\t\t#{$property}: $hovered;\n\t}\n}\n\n// Add responsive styling for multiple breakpoints\n// -----------------------------------------------\n@mixin responsive($property, $base, $medium:false, $small:false) {\n\t#{$property}: $base;\n\t@if $medium {\n\t\t@include bp(medium) {\n\t\t\t#{$property}: $medium;\n\t\t}\n\t}\n\t@if $small {\n\t\t@include bp(small) {\n\t\t\t#{$property}: $small;\n\t\t}\n\t}\n}\n\n// Create a triangle using borders\n// -------------------------------\n@mixin triangle($direction: $triangle-direction-default,\n\t\t\t\t\t\t\t\t$size: $triangle-size-default,\n\t\t\t\t\t\t\t\t$color: $triangle-color-default,\n\t\t\t\t\t\t\t\t$center: false,\n\t\t\t\t\t\t\t\t$element: $triangle-element-default) {\n\t&:#{$element} {\n\t\t@if not $center {\n\t\t\tposition: absolute;\n\t\t}\n\t\tcontent:'';\n\t\t@include size(0);\n\t\t-webkit-transform: rotate(360deg);\n\t\tborder-style: solid;\n\t\t@if $direction == up {\n\t\t\tborder-width: 0 $size ($size*1.625) $size;\n\t\t\tborder-color: transparent transparent $color transparent;\n\t\t\t@if $center {\n\t\t\t\t@include absolute(null,null,100%,50%);\n\t\t\t\t@if $browser-prefixes {\n\t\t\t\t\t@include juice-prefixer(transform, translateX(-$size), webkit moz ms o spec);\n\t\t\t\t}\n\t\t\t\t@else {\n\t\t\t\t\ttransform: translateX(-$size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@else if $direction == up-right {\n\t\t\tborder-width: 0 $size $size 0;\n\t\t\tborder-color: transparent $color transparent transparent;\n\t\t\t@if $center {\n\t\t\t\t@include absolute(0,0);\n\t\t\t}\n\t\t}\n\t\t@else if $direction == right {\n\t\t\tborder-width: $size 0 $size ($size*1.625);\n\t\t\tborder-color: transparent transparent transparent $color;\n\t\t\t@if $center {\n\t\t\t\t@include absolute(50%,null,null,100%);\n\t\t\t\t@if $browser-prefixes {\n\t\t\t\t\t@include juice-prefixer(transform, translateY(-$size), webkit moz ms o spec);\n\t\t\t\t}\n\t\t\t\t@else {\n\t\t\t\t\ttransform: translateY(-$size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@else if $direction == down-right {\n\t\t\tborder-width: 0 0 $size $size;\n\t\t\tborder-color: transparent transparent $color transparent;\n\t\t\t@if $center {\n\t\t\t\t@include absolute(null,0,0);\n\t\t\t}\n\t\t}\n\t\t@else if $direction == down {\n\t\t\tborder-width: ($size*1.625) $size 0 $size;\n\t\t\tborder-color: $color transparent transparent transparent;\n\t\t\t@if $center {\n\t\t\t\t@include absolute(100%,null,null,50%);\n\t\t\t\t@if $browser-prefixes {\n\t\t\t\t\t@include juice-prefixer(transform, translateX(-$size), webkit moz ms o spec);\n\t\t\t\t}\n\t\t\t\t@else {\n\t\t\t\t\ttransform: translateX(-$size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@else if $direction == down-left {\n\t\t\tborder-width: $size 0 0 $size;\n\t\t\tborder-color: transparent transparent transparent $color;\n\t\t\t@if $center {\n\t\t\t\t@include absolute(null,null,0,0);\n\t\t\t}\n\t\t}\n\t\t@else if $direction == left {\n\t\t\tborder-width: $size ($size*1.625) $size 0;\n\t\t\tborder-color: transparent $color transparent transparent;\n\t\t\t@if $center {\n\t\t\t\t@include absolute(50%,100%);\n\t\t\t\t@if $browser-prefixes {\n\t\t\t\t\t@include juice-prefixer(transform, translateY(-$size), webkit moz ms o spec);\n\t\t\t\t}\n\t\t\t\t@else {\n\t\t\t\t\ttransform: translateY(-$size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@else if $direction == up-left {\n\t\t\tborder-width: $size $size 0 0;\n\t\t\tborder-color: $color transparent transparent transparent;\n\t\t\t@if $center {\n\t\t\t\t@include absolute(0,null,null,0);\n\t\t\t}\n\t\t}\n\t\t@else {\n\t\t\t@warn \"Available directions: up, up-right, right, down-right, down, down-left, left, up-left.\";\n\t\t}\n\t\t@content;\n\t}\n}\n\n// Create a circle, with an optional border\n// ----------------------------------------\n@mixin circle($size: $circle-size-default,\n\t\t\t\t\t\t$color: $circle-color-default,\n\t\t\t\t\t\t$border-width: $circle-border-width-default,\n\t\t\t\t\t\t$border-color: $circle-border-color-default,\n\t\t\t\t\t\t$display: $circle-display-default) {\n\tdisplay: $display;\n\tborder-radius: 50%;\n\t@if $border-width {\n\t\t@include size($size);\n\t\tbackground-color: $color;\n\t\tborder: $border-width solid $border-color;\n\t}\n\t@else{\n\t\t@if $color == inherit {\n\t\t\t@include size(0);\n\t\t\tborder-width: $size/2;\n\t\t\tborder-style: solid;\n\t\t}\n\t\t@else {\n\t\t\t@include size($size);\n\t\t\tbackground-color: $color;\n\t\t}\n\t}\n}\n\n// Create a psuedo element square, with an optional border\n// -------------------------------------------------------\n@mixin square($size: $square-size-default,\n\t\t\t\t\t\t$color: $square-color-default,\n\t\t\t\t\t\t$border-width: $square-border-width-default,\n\t\t\t\t\t\t$border-color: $square-border-color-default,\n\t\t\t\t\t\t$element: $square-element-default) {\n\t&:#{$element} {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\t@include size($size);\n\t\tbackground: $color;\n\t\t@if $border-width {\n\t\t\tborder: $border-width solid $border-color;\n\t\t}\n\t}\n}\n\n// Advanced positioning\n// --------------------\n@mixin position($type,\n\t\t\t\t\t\t\t\t$top: $position-default,\n\t\t\t\t\t\t\t\t$right: $position-default,\n\t\t\t\t\t\t\t\t$bottom: $position-default,\n\t\t\t\t\t\t\t\t$left: $position-default) {\n\tposition: $type;\n\t$allowed_types: absolute relative fixed;\n\t@if not index($allowed_types, $type) {\n\t\t@warn \"Unknown position: #{$type}.\";\n\t}\n\t@each $data in top $top, right $right, bottom $bottom, left $left {\n\t\t#{nth($data, 1)}: nth($data, 2);\n\t}\n}\n@mixin absolute($top: $position-default, $right: $position-default, $bottom: $position-default, $left: $position-default) {\n\t@include position(absolute, $top, $right, $bottom, $left);\n}\n@mixin relative($top: $position-default, $right: $position-default, $bottom: $position-default, $left: $position-default) {\n\t@include position(relative, $top, $right, $bottom, $left);\n}\n@mixin fixed($top: $position-default, $right: $position-default, $bottom: $position-default, $left: $position-default) {\n\t@include position(fixed, $top, $right, $bottom, $left);\n}\n\n// Easily set an element's \"trbl\" values\n// -------------------------------------\n@mixin trbl($top: $position-default,\n\t\t\t\t\t\t\t\t$right: $position-default,\n\t\t\t\t\t\t\t\t$bottom: $position-default,\n\t\t\t\t\t\t\t\t$left: $position-default) {\n\t@each $data in top $top, right $right, bottom $bottom, left $left {\n\t\t#{nth($data, 1)}: nth($data, 2);\n\t}\n}\n@mixin top-left {\n\t@include trbl(0,null,null,0);\n}\n@mixin top-right {\n\t@include trbl(0,0);\n}\n@mixin bottom-left {\n\t@include trbl(null,null,0,0);\n}\n@mixin bottom-right {\n\t@include trbl(null,0,0,null);\n}\n\n// Preload Images\n// Credit: http://codepen.io/pixelass/details/vEKZRq\n// -------------------------------------------------\n@mixin image-preload($preload: run) {\n\t@if not variable-exists(_preload-image-list) {\n\t\t$_preload-image-list: ()!global;\n\t}\n\t@if not variable-exists(_preload-image-urls) {\n\t\t$_preload-image-urls: ()!global;\n\t}\n\t@if not variable-exists(_preload-images-loaded) {\n\t\t$_preload-images-loaded: false!global;\n\t}\n\t@if $preload == run and not $_preload-images-loaded {\n\t\t$_preload-images-loaded: true!global;\n\t\thtml:after {\n\t\t\tcontent: '';\n\t\t\tdisplay: none;\n\t\t\tbackground-image: $_preload-image-urls;\n\t\t}\n\t} @else {\n\t\t$_preload-image-list: join($preload, $_preload-image-list)!global;\n\t\t$image-urls: ();\n\t\t@if length($_preload-image-list) > 0 {\n\t\t\t@for $i from 1 through length($_preload-image-list) {\n\t\t\t\t$image-urls: join(url(#{nth($_preload-image-list,$i)}), $image-urls);\n\t\t\t}\n\t\t\t$result: ();\n\t\t\t@each $item in $image-urls {\n\t\t\t\t@if not index($result, $item) {\n\t\t\t\t\t\t$result: append($result, $item, comma);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$_preload-image-urls: $result!global;\n\t\t}\n\t}\n}\n\n// --------------------------------------------------------------------\n// Helper Mixins\n// --------------------------------------------------------------------\n\n// Clearfix\n// --------\n@mixin clearfix {\n\t*zoom: 1;\n\t&:before,\n\t&:after {\n\t\tdisplay: table;\n\t\tcontent:'';\n\t\tline-height: 0;\n\t}\n\t&:after {\n\t\tclear: both;\n\t}\n}\n\n// Hide text\n// ---------\n@mixin hide-text {\n\tfont: 0/0 a;\n\tcolor: transparent;\n\ttext-shadow: none;\n}\n\n// Center an element vertically and horizontally\n// ---------------------------------------------\n@mixin centerer {\n\t@include absolute(50%,null,null,50%);\n\t@if $browser-prefixes {\n\t\t@include juice-prefixer(transform, translate(-50%,-50%), webkit moz ms o spec);\n\t}\n\t@else {\n\t\ttransform: translate(-50%,-50%);\n\t}\n}\n\n// Center an element vertically\n// ----------------------------\n@mixin vert-centerer {\n\t@include relative(50%);\n\t@if $browser-prefixes {\n\t\t@include juice-prefixer(transform, translateY(-50%), webkit moz ms o spec);\n\t}\n\t@else {\n\t\ttransform: translateY(-50%);\n\t}\n}\n\n// Cover everything\n// ----------------\n@mixin coverer {\n\t@include absolute(0, null, null, 0);\n\t@include size(100%);\n}\n\n// Center a block level element\n// ----------------------------\n@mixin center-block {\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n\n// Clean an element\n// ----------------\n@mixin clean {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n// ----------------------------------\n// Functions\n// ----------------------------------\n\n// Mix white with another color\n// ----------------------------\n@function tint($color, $percent: $mix-percent-default){\n\t@return mix(white, $color, $percent);\n}\n\n// Mix black with another color\n// ----------------------------\n@function shade($color, $percent: $mix-percent-default){\n\t@return mix(black, $color, $percent);\n}\n\n// Create a random color\n// ---------------------\n@function random-color($min: 0, $max: 255, $alpha: 1) {\n\t@if $min < 0 {\n\t\t$min: -1;\n\t} @else {\n\t\t$min: $min - 1;\n\t}\n\t@if $max > 255 {\n\t\t$max: 256;\n\t} @else {\n\t\t$max: $max + 1;\n\t}\n\t$red: random($max) + $min;\n\t$green: random($max) + $min;\n\t$blue: random($max) + $min;\n\t@return rgba($red, $green, $blue, $alpha);\n}\n\n// Reverse a string\n// Credit: https://coderwall.com/p/rhu_uw/sass-str-reverse-function\n// ----------------\n@function reverse($string) {\n\t$reversed-string: '';\n\t@for $i from 1 through str-length($string) {\n\t\t$char: str-slice($string, $i, $i);\n\t\t$reversed-string: \"#{$char}#{$reversed-string}\";\n\t}\n\t@return #{$reversed-string};\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n"]}