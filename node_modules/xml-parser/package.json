{
  "_args": [
    [
      {
        "raw": "xml-parser@^1.2.1",
        "scope": null,
        "escapedName": "xml-parser",
        "name": "xml-parser",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "/Users/Alex/Documents/web/nalchik/node_modules/svg-sprite-data"
    ]
  ],
  "_from": "xml-parser@>=1.2.1 <2.0.0",
  "_id": "xml-parser@1.2.1",
  "_inCache": true,
  "_location": "/xml-parser",
  "_npmUser": {
    "name": "segment",
    "email": "tj@segment.io"
  },
  "_npmVersion": "1.4.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xml-parser@^1.2.1",
    "scope": null,
    "escapedName": "xml-parser",
    "name": "xml-parser",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/svg-sprite-data"
  ],
  "_resolved": "https://registry.npmjs.org/xml-parser/-/xml-parser-1.2.1.tgz",
  "_shasum": "c31f4c34f2975db82ad013222120592736156fcd",
  "_shrinkwrap": null,
  "_spec": "xml-parser@^1.2.1",
  "_where": "/Users/Alex/Documents/web/nalchik/node_modules/svg-sprite-data",
  "bugs": {
    "url": "https://github.com/segmentio/xml-parser/issues"
  },
  "dependencies": {
    "debug": "^2.2.0"
  },
  "description": "the little xml parser that could",
  "devDependencies": {
    "matcha": "^0.6.0",
    "mocha": "^2.2.5",
    "should": "^6.0.3"
  },
  "directories": {},
  "dist": {
    "shasum": "c31f4c34f2975db82ad013222120592736156fcd",
    "tarball": "https://registry.npmjs.org/xml-parser/-/xml-parser-1.2.1.tgz"
  },
  "homepage": "https://github.com/segmentio/xml-parser#readme",
  "keywords": [
    "xml",
    "sucks"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "tjholowaychuk",
      "email": "tj@vision-media.ca"
    },
    {
      "name": "segment",
      "email": "tj@segment.io"
    }
  ],
  "name": "xml-parser",
  "optionalDependencies": {},
  "readme": "\n# xml-parser\n\n  Simple non-compiant XML parser because we just need to parse some basic responses and libxml takes forever to compile :D you probably don't want to use this unless you also have similar needs.\n\n## Installation\n\n```\n$ npm install xml-parser\n```\n\n## Example\n\n JavaScript:\n\n```js\nvar fs = require('fs');\nvar parse = require('xml-parser');\nvar xml = fs.readFileSync('examples/developerforce.xml', 'utf8');\nvar inspect = require('util').inspect;\n\nvar obj = parse(xml);\nconsole.log(inspect(obj, { colors: true, depth: Infinity }));\n```\n\nXML:\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"\n   xmlns=\"urn:enterprise.soap.sforce.com\">\n   <soapenv:Body>\n      <createResponse>\n         <result>\n            <id>003D000000OY9omIAD</id>\n            <success>true</success>\n         </result>\n         <result>\n            <id>001D000000HTK3aIAH</id>\n            <success>true</success>\n         </result>\n      </createResponse>\n   </soapenv:Body>\n </soapenv:Envelope>\n```\n\nYields:\n\n```js\n{ declaration: { attributes: { version: '1.0', encoding: 'utf-8' } },\n  root:\n   { name: 'soapenv:Envelope',\n     attributes:\n      { 'xmlns:soapenv': 'http://schemas.xmlsoap.org/soap/envelope/',\n        xmlns: 'urn:enterprise.soap.sforce.com' },\n     children:\n      [ { name: 'soapenv:Body',\n          attributes: {},\n          children:\n           [ { name: 'createResponse',\n               attributes: {},\n               children:\n                [ { name: 'result',\n                    attributes: {},\n                    children:\n                     [ { name: 'id',\n                         attributes: {},\n                         children: [],\n                         content: '003D000000OY9omIAD' },\n                       { name: 'success', attributes: {}, children: [], content: 'true' } ],\n                    content: '' },\n                  { name: 'result',\n                    attributes: {},\n                    children:\n                     [ { name: 'id',\n                         attributes: {},\n                         children: [],\n                         content: '001D000000HTK3aIAH' },\n                       { name: 'success', attributes: {}, children: [], content: 'true' } ],\n                    content: '' } ],\n               content: '' } ],\n          content: '' } ],\n     content: '' } }\n```\n\n# License\n\n  MIT",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/segmentio/xml-parser.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "1.2.1"
}
